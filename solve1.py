
#Project Euler


"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
"""

def multiples(n):
    result_sum = 0
    if n >= 1000:
        return n
    for i in range(n):
        if i % 3 == 0 or i % 5 == 0:
            result_sum += i
    return result_sum

n = 10
out_1 = multiples(n)

print("Multipels of 3 or 5: ", out_1)


"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def evenFib(n):
    a = 1
    b = 1
    result = 0
    while a <= n:
        if a % 2 == 0:
            result += a
        a = b
        b = a + b
    return result

for i in range(0, n):
    out_2 = evenFib(i) 
    print("Even Fibonacci numbers: ", out_2)


"""
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?
"""

def Largest_Prime_Factor(n):

    i = 3
    factor = []
    while pow(n, 2) <= n:
        if n % i != 0:
            i += 2
        else:
            n /= i
            factor.append(i)
            
    while n >= i:
        if n % i != 0:
            i += 2
        else:
            n /= i
            factor.append(i)
            
    return max(factor) 
    
        

n2 = 600851475143

out_3 = Largest_Prime_Factor(n2)

print("Largest prime factor: ", out_3)

    



"""
A palindromic number reads the same both ways.
The largest palindrome made from the product of two 2 - digit numbers is 9009 = 91 * 99.
"""
def check_palindrome_number(n):
        rev = 0
        while n > 0:
            rev = rev * 10 + n % 10
            n //= 10
        return rev 

def largest_palindrome_product(n):
    greatest = 0
    min_val = 100
    max_val = 999
    for i in range(min_val, max_val):
        for j in range(min_val, max_val):
            product = i * j
            if product == check_palindrome_number(product) and product > greatest:
                greatest = product
    return greatest 


n3 = 323


out_4 = largest_palindrome_product(n3)

print("Largest palindrome product ", out_4)



"""
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
"""

def smallest_multiple(n):
    Max_iter = 10000000

    number = 1
    nlist = list(range(11, 21))
    result = -1
    while number < Max_iter:
        divisible = True
        for n in nlist:
            if number % n != 0:
                divisible = False
                break
        if divisible:
            result = number
            break
        number += 1

    return number 

    
        

n4 = 2520 
out_5 = smallest_multiple(n4)

print("Smallest multiple ", out_5) 









